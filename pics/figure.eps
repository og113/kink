%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./pics/figure.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Dec 15 16:23:51 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 770 410
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./pics/figure.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (og113)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec 15 16:23:51 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 770 50 lineto 770 410 lineto 50 410 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF30 {0.32 div 0.78125 sub} bind def	% x/0.32-0.78125
/cF31 {2 mul 0.84 sub} bind def	% 2*x-0.84
/cF32 {dup 0.42 le {4 mul} {dup 0.92 le {-2 mul 1.84 add} {0.08 div 11.5 sub} ifelse} ifelse} bind def	% 4x;1;-2x+1.84;x/0.08-11.5
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF30 Constrain exch dup cF31 Constrain exch cF32 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.000 UL
LTb
1761 1653 M
5743 3261 L
6896 -929 R
5743 3261 L
1761 1653 M
0 3215 V
stroke
LTa
1761 1653 M
5743 3261 L
stroke
LTb
1761 1653 M
68 27 V
stroke
1671 1592 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
5743 3261 M
-68 -28 V
stroke
LTa
2451 1560 M
6433 3168 L
stroke
LTb
2451 1560 M
67 27 V
stroke
2361 1500 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6433 3168 M
-68 -27 V
stroke
LTa
3140 1467 M
7122 3075 L
stroke
LTb
3140 1467 M
68 28 V
stroke
3050 1407 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
7122 3075 M
-67 -27 V
stroke
LTa
3830 1374 M
7811 2982 L
stroke
LTb
3830 1374 M
68 28 V
stroke
3740 1314 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
7811 2982 M
-67 -27 V
stroke
LTa
4520 1282 M
8501 2889 L
stroke
LTb
4520 1282 M
67 27 V
stroke
4430 1221 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
8501 2889 M
-68 -27 V
stroke
LTa
5210 1189 M
9190 2797 L
stroke
LTb
5210 1189 M
67 27 V
stroke
5119 1128 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
9190 2797 M
-67 -28 V
stroke
LTa
5899 1096 M
9880 2704 L
stroke
LTb
5899 1096 M
68 27 V
stroke
5809 1035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
9880 2704 M
-67 -27 V
stroke
LTa
6589 1003 M
3981 1608 V
stroke
LTb
6589 1003 M
67 27 V
stroke
6499 943 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
10570 2611 M
-68 -27 V
stroke
LTa
7278 910 M
3982 1608 V
stroke
LTb
7278 910 M
67 28 V
stroke
7189 850 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
11260 2518 M
-68 -27 V
stroke
LTa
7967 818 M
3982 1607 V
stroke
LTb
7967 818 M
68 27 V
stroke
7877 757 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
11949 2425 M
-67 -27 V
stroke
LTa
8657 725 M
3982 1607 V
stroke
LTb
8657 725 M
68 27 V
stroke
8567 664 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
12639 2332 M
-68 -27 V
stroke
LTa
8657 725 M
1761 1653 L
stroke
LTb
8657 725 M
-55 7 V
stroke
8730 708 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1761 1653 M
55 -7 V
stroke
LTa
9653 1127 M
2756 2055 L
stroke
LTb
9653 1127 M
-55 7 V
stroke
9725 1110 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2756 2055 M
55 -7 V
stroke
LTa
10648 1529 M
3752 2457 L
stroke
LTb
10648 1529 M
-55 7 V
stroke
10721 1512 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3752 2457 M
55 -7 V
stroke
LTa
11644 1931 M
4747 2859 L
stroke
LTb
11644 1931 M
-55 7 V
stroke
11716 1914 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4747 2859 M
55 -8 V
stroke
LTa
12639 2332 M
5743 3261 L
stroke
LTb
12639 2332 M
-55 8 V
stroke
12712 2316 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5743 3261 M
55 -8 V
1761 2725 M
63 0 V
stroke
1635 2725 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 2993 M
63 0 V
stroke
1635 2993 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 3261 M
63 0 V
stroke
1635 3261 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 3529 M
63 0 V
stroke
1635 3529 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.03)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 3796 M
63 0 V
stroke
1635 3796 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.04)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 4064 M
63 0 V
stroke
1635 4064 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 4332 M
63 0 V
stroke
1635 4332 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 4600 M
63 0 V
stroke
1635 4600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.07)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1761 4868 M
63 0 V
stroke
1635 4868 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.08)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
37 4028 M
[ [(Helvetica) 140.0 0.0 true true 0 (sign\(re\(phi\)\)*mag\(phi\))]
] -46.7 MCshow
LTb
7199 6933 M
[ [(Helvetica) 140.0 0.0 true true 0 (phi)]
] -46.7 MCshow
1.000 UP
% Begin plot #1
1.000 UP
1.000 UL
LT0
.5 g .5 g 10578 2609 Pls
.5 g 10509 2618 Pls
.5 g 10439 2628 Pls
.5 g 10369 2637 Pls
.5 g 10300 2646 Pls
.5 g 10230 2656 Pls
.5 g 10160 2665 Pls
.5 g 10091 2674 Pls
.5 g 10021 2684 Pls
.5 g 9951 2693 Pls
.5 g 9882 2703 Pls
.5 g 9812 2712 Pls
.5 g 9742 2721 Pls
.5 g 9673 2731 Pls
.5 g 9603 2740 Pls
.5 g 9533 2749 Pls
.5 g 9464 2759 Pls
.5 g 9394 2768 Pls
.5 g 9324 2778 Pls
.5 g 9255 2787 Pls
.5 g 9185 2796 Pls
.5 g 9115 2806 Pls
.5 g 9046 2815 Pls
.5 g 8976 2824 Pls
.5 g 8906 2834 Pls
.5 g 8837 2843 Pls
.5 g 8767 2853 Pls
.5 g 8697 2862 Pls
.5 g 8628 2871 Pls
.5 g 8558 2881 Pls
.5 g 8488 2890 Pls
.5 g 8419 2899 Pls
.5 g 8349 2909 Pls
.5 g 8279 2918 Pls
.5 g 8210 2928 Pls
.5 g 8140 2937 Pls
.5 g 8070 2946 Pls
.5 g 8001 2956 Pls
.5 g 7931 2965 Pls
.5 g 7861 2975 Pls
.5 g 7792 2984 Pls
.5 g 7722 2993 Pls
.5 g 7652 3003 Pls
.5 g 7583 3012 Pls
.5 g 7513 3021 Pls
.5 g 7443 3031 Pls
.5 g 7374 3040 Pls
.5 g 7304 3050 Pls
.5 g 7234 3059 Pls
.5 g 7165 3068 Pls
.5 g 7095 3078 Pls
.5 g 7025 3087 Pls
.5 g 6956 3096 Pls
.5 g 6886 3106 Pls
.5 g 6816 3115 Pls
.5 g 6747 3125 Pls
.5 g 6677 3134 Pls
.5 g 6607 3144 Pls
.5 g 6538 3153 Pls
.5 g 6468 3162 Pls
.5 g 6398 3172 Pls
.5 g 6329 3181 Pls
.5 g 6259 3191 Pls
.5 g 6189 3200 Pls
.5 g 6120 3210 Pls
.5 g 6050 3220 Pls
.5 g 5980 3229 Pls
.5 g 5911 3239 Pls
.5 g 5841 3249 Pls
.5 g 5771 3259 Pls
.5 g 5702 3269 Pls
.5 g 5632 3279 Pls
.5 g 5562 3289 Pls
.5 g 5493 3300 Pls
.5 g 5423 3311 Pls
.5 g 5353 3322 Pls
.5 g 5284 3334 Pls
.5 g 5214 3346 Pls
.5 g 5144 3359 Pls
.5 g 5075 3374 Pls
.5 g 5005 3389 Pls
.5 g 4935 3406 Pls
.5 g 4866 3426 Pls
.5 g 4796 3449 Pls
.5 g 4726 3476 Pls
.5 g 4657 3509 Pls
.5 g 4587 3549 Pls
.5 g 4517 3601 Pls
.5 g 4448 3669 Pls
.5 g 4378 3760 Pls
.5 g 4308 3884 Pls
.5 g 4239 4057 Pls
.5 g 4169 4298 Pls
.5 g 4099 4627 Pls
.5 g 4030 5042 Pls
.5 g 3960 5450 Pls
.5 g 3890 5558 Pls
.5 g 3821 4928 Pls
.5 g 10578 2609 Pls
.5 g 10509 2618 Pls
.5 g 10439 2628 Pls
.5 g 10369 2637 Pls
.5 g 10300 2646 Pls
.5 g 10230 2656 Pls
.5 g 10160 2665 Pls
.5 g 10091 2674 Pls
.5 g 10021 2684 Pls
.5 g 9951 2693 Pls
.5 g 9882 2703 Pls
.5 g 9812 2712 Pls
.5 g 9742 2721 Pls
.5 g 9673 2731 Pls
.5 g 9603 2740 Pls
.5 g 9533 2749 Pls
.5 g 9464 2759 Pls
.5 g 9394 2768 Pls
.5 g 9324 2778 Pls
.5 g 9255 2787 Pls
.5 g 9185 2796 Pls
.5 g 9115 2806 Pls
.5 g 9046 2815 Pls
.5 g 8976 2824 Pls
.5 g 8906 2834 Pls
.5 g 8837 2843 Pls
.5 g 8767 2853 Pls
.5 g 8697 2862 Pls
.5 g 8628 2871 Pls
.5 g 8558 2881 Pls
.5 g 8488 2890 Pls
.5 g 8419 2899 Pls
.5 g 8349 2909 Pls
.5 g 8279 2918 Pls
.5 g 8210 2928 Pls
.5 g 8140 2937 Pls
.5 g 8070 2946 Pls
.5 g 8001 2956 Pls
.5 g 7931 2965 Pls
.5 g 7861 2975 Pls
.5 g 7792 2984 Pls
.5 g 7722 2993 Pls
.5 g 7652 3003 Pls
.5 g 7583 3012 Pls
.5 g 7513 3021 Pls
.5 g 7443 3031 Pls
.5 g 7374 3040 Pls
.5 g 7304 3050 Pls
.5 g 7234 3059 Pls
.5 g 7165 3068 Pls
.5 g 7095 3078 Pls
.5 g 7025 3087 Pls
.5 g 6956 3096 Pls
.5 g 6886 3106 Pls
.5 g 6816 3115 Pls
.5 g 6747 3125 Pls
.5 g 6677 3134 Pls
.5 g 6607 3144 Pls
.5 g 6538 3153 Pls
.5 g 6468 3162 Pls
.5 g 6398 3172 Pls
.5 g 6329 3181 Pls
.5 g 6259 3191 Pls
.5 g 6189 3200 Pls
.5 g 6120 3210 Pls
.5 g 6050 3220 Pls
.5 g 5980 3229 Pls
.5 g 5911 3239 Pls
.5 g 5841 3249 Pls
.5 g 5771 3259 Pls
.5 g 5702 3269 Pls
.5 g 5632 3279 Pls
.5 g 5562 3289 Pls
.5 g 5493 3300 Pls
.5 g 5423 3311 Pls
.5 g 5353 3322 Pls
.5 g 5284 3334 Pls
.5 g 5214 3346 Pls
.5 g 5144 3359 Pls
.5 g 5075 3374 Pls
.5 g 5005 3389 Pls
.5 g 4935 3406 Pls
.5 g 4866 3426 Pls
.5 g 4796 3449 Pls
.5 g 4726 3476 Pls
.5 g 4657 3509 Pls
.5 g 4587 3549 Pls
.5 g 4517 3601 Pls
.5 g 4448 3669 Pls
.5 g 4378 3760 Pls
.5 g 4308 3884 Pls
.5 g 4239 4057 Pls
.5 g 4169 4298 Pls
.5 g 4099 4627 Pls
.5 g 4030 5042 Pls
.5 g 3960 5450 Pls
.5 g 3890 5558 Pls
.5 g 3821 4928 Pls
% End plot #1
1.000 UL
LTb
12639 2332 M
8657 725 L
1761 1653 M
8657 725 L
stroke
LCb setrgbcolor
4214 787 M
[ [(Helvetica) 140.0 0.0 true true 0 (x)]
] -46.7 MCshow
LTb
LCb setrgbcolor
12372 1297 M
[ [(Helvetica) 140.0 0.0 true true 0 (t)]
] -46.7 MCshow
LTb
LCb setrgbcolor
37 4028 M
[ [(Helvetica) 140.0 0.0 true true 0 (sign\(re\(phi\)\)*mag\(phi\))]
] -46.7 MCshow
LTb
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
12846 3054 translate 549 2391 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
12846 3054 N
549 0 V
0 2391 V
-549 0 V
0 -2391 V
Z stroke
1.000 UL
LTb
1.000 UL
LTb
13395 3054 M
-63 0 V
stroke
13479 3054 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MLshow
1.000 UL
LTb
12846 3054 M
63 0 V
486 597 R
-63 0 V
stroke
13479 3651 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MLshow
1.000 UL
LTb
12846 3651 M
63 0 V
486 598 R
-63 0 V
stroke
13479 4249 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
1.000 UL
LTb
12846 4249 M
63 0 V
486 598 R
-63 0 V
stroke
13479 4847 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MLshow
1.000 UL
LTb
12846 4847 M
63 0 V
486 598 R
-63 0 V
stroke
13479 5445 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MLshow
1.000 UL
LTb
12846 5445 M
63 0 V
stroke
LCb setrgbcolor
13857 4249 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (phase\(phi\))]
] -46.7 MCshow
grestore
LTb
1.000 UP
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
